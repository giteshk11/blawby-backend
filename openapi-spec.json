{
  "openapi": "3.0.3",
  "info": {
    "title": "Blawby API",
    "description": "Complete API specification for Blawby TypeScript application",
    "version": "1.0.0",
    "contact": {
      "name": "Blawby Team"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 128
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "email": { "type": "string" },
              "name": { "type": "string" },
              "emailVerified": { "type": "boolean" },
              "createdAt": { "type": "string", "format": "date-time" },
              "updatedAt": { "type": "string", "format": "date-time" }
            }
          },
          "session": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "userId": { "type": "string" },
              "expiresAt": { "type": "string", "format": "date-time" },
              "token": { "type": "string" }
            }
          }
        }
      },
      "CreatePracticeRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "slug": { "type": "string", "minLength": 1 },
          "logo": { "type": "string", "format": "uri" },
          "metadata": { "type": "object" }
        }
      },
      "UpdatePracticeRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "slug": { "type": "string", "minLength": 1 },
          "logo": { "type": "string", "format": "uri" },
          "metadata": { "type": "object" }
        }
      },
      "AddMemberRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string", "enum": ["owner", "admin", "member"] }
        }
      },
      "UpdateMemberRoleRequest": {
        "type": "object",
        "required": ["role"],
        "properties": {
          "role": { "type": "string", "enum": ["owner", "admin", "member"] }
        }
      },
      "CreatePracticeDetailsRequest": {
        "type": "object",
        "required": ["organizationId"],
        "properties": {
          "organizationId": { "type": "string", "minLength": 1 },
          "businessPhone": { "type": "string" },
          "businessEmail": { "type": "string", "format": "email" },
          "consultationFee": { "type": "string" },
          "paymentUrl": { "type": "string", "format": "uri" },
          "calendlyUrl": { "type": "string", "format": "uri" }
        }
      },
      "UpdatePracticeDetailsRequest": {
        "type": "object",
        "properties": {
          "businessPhone": { "type": "string" },
          "businessEmail": { "type": "string", "format": "email" },
          "consultationFee": { "type": "string" },
          "paymentUrl": { "type": "string", "format": "uri" },
          "calendlyUrl": { "type": "string", "format": "uri" }
        }
      },
      "CreateConnectedAccountRequest": {
        "type": "object",
        "required": ["type", "country", "email", "entityType", "entityId"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["express", "standard", "custom"]
          },
          "country": { "type": "string", "minLength": 2, "maxLength": 2 },
          "email": { "type": "string", "format": "email" },
          "businessType": {
            "type": "string",
            "enum": ["individual", "company"]
          },
          "entityType": { "type": "string", "minLength": 1 },
          "entityId": { "type": "string", "minLength": 1 }
        }
      },
      "CreateAccountLinkRequest": {
        "type": "object",
        "required": ["accountId", "refreshUrl", "returnUrl"],
        "properties": {
          "accountId": { "type": "string" },
          "refreshUrl": { "type": "string", "format": "uri" },
          "returnUrl": { "type": "string", "format": "uri" }
        }
      },
      "StartOnboardingRequest": {
        "type": "object",
        "required": ["organizationId"],
        "properties": {
          "organizationId": { "type": "string", "minLength": 1 },
          "organizationName": { "type": "string" },
          "organizationEmail": { "type": "string", "format": "email" },
          "country": { "type": "string", "minLength": 2, "maxLength": 2 },
          "refreshUrl": { "type": "string", "format": "uri" },
          "returnUrl": { "type": "string", "format": "uri" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "boolean" }
        }
      },
      "DataResponse": {
        "type": "object",
        "properties": {
          "data": { "type": "object" }
        }
      }
    }
  },
  "paths": {
    "/health/check": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the API is running",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root Status",
        "description": "Get root status",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "Root status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Register a new user",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "User Signin",
        "description": "Authenticate user",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "summary": "User Signout",
        "description": "Sign out user",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/session": {
      "get": {
        "summary": "Get Session",
        "description": "Get current user session",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Session retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh Session",
        "description": "Refresh user session token",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session": { "type": "object" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/create": {
      "post": {
        "summary": "Create Practice",
        "description": "Create a new practice (organization)",
        "tags": ["Practice Management"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePracticeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Practice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/list": {
      "get": {
        "summary": "List Practices",
        "description": "List user's practices (organizations)",
        "tags": ["Practice Management"],
        "responses": {
          "200": {
            "description": "Practices retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/{id}": {
      "get": {
        "summary": "Get Practice Details",
        "description": "Get practice details by ID",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Practice details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Practice",
        "description": "Update practice details",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePracticeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Practice updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Practice",
        "description": "Delete practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Practice deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/{id}/member": {
      "post": {
        "summary": "Add Member to Practice",
        "description": "Add a member to practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/{id}/member/{userId}": {
      "delete": {
        "summary": "Remove Member from Practice",
        "description": "Remove a member from practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Member Role",
        "description": "Update member role in practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/{id}/members": {
      "get": {
        "summary": "List Practice Members",
        "description": "List all members of a practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Members retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/{id}/switch": {
      "post": {
        "summary": "Switch Active Practice",
        "description": "Switch to a different active practice",
        "tags": ["Practice Management"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Practice switched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/active": {
      "get": {
        "summary": "Get Active Practice",
        "description": "Get currently active practice",
        "tags": ["Practice Management"],
        "responses": {
          "200": {
            "description": "Active practice retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/details": {
      "post": {
        "summary": "Create Practice Details",
        "description": "Create practice business details",
        "tags": ["Practice Details"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePracticeDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Practice details created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/details/{organizationId}": {
      "get": {
        "summary": "Get Practice Details by Organization",
        "description": "Get practice details for an organization",
        "tags": ["Practice Details"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Practice details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/details/{id}": {
      "put": {
        "summary": "Update Practice Details",
        "description": "Update practice details",
        "tags": ["Practice Details"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePracticeDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Practice details updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Practice Details",
        "description": "Delete practice details",
        "tags": ["Practice Details"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Practice details deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/practice/business-info/{organizationId}": {
      "get": {
        "summary": "Get Practice Business Info",
        "description": "Get practice business information",
        "tags": ["Practice Details"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Business info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/user": {
      "get": {
        "summary": "Get User Settings",
        "description": "Get user settings",
        "tags": ["Settings"],
        "responses": {
          "200": {
            "description": "User settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Settings",
        "description": "Update user settings",
        "tags": ["Settings"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "preferences": { "type": "object" },
                  "profile": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/user/{category}": {
      "put": {
        "summary": "Update User Settings Category",
        "description": "Update specific user settings category",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User settings category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/user/history": {
      "get": {
        "summary": "Get User Settings History",
        "description": "Get user settings change history",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 50 }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/organization/{organizationId}": {
      "get": {
        "summary": "Get Organization Settings",
        "description": "Get organization settings",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Organization Settings",
        "description": "Update organization settings",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "general": { "type": "object" },
                  "billing": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/organization/{organizationId}/{category}": {
      "put": {
        "summary": "Update Organization Settings Category",
        "description": "Update specific organization settings category",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization settings category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/organization/{organizationId}/history": {
      "get": {
        "summary": "Get Organization Settings History",
        "description": "Get organization settings change history",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 50 }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connected-accounts": {
      "post": {
        "summary": "Create Connected Account",
        "description": "Create a new Stripe connected account",
        "tags": ["Stripe Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectedAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connected account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connected-accounts/{accountId}": {
      "get": {
        "summary": "Get Connected Account",
        "description": "Get Stripe connected account details",
        "tags": ["Stripe Integration"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Connected account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Connected account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account-links": {
      "post": {
        "summary": "Create Account Link",
        "description": "Create Stripe account link for onboarding",
        "tags": ["Stripe Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account link created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connected-accounts/onboarding/start": {
      "post": {
        "summary": "Start Onboarding Session",
        "description": "Start Stripe onboarding session for organization",
        "tags": ["Stripe Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOnboardingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Onboarding session started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/onboarding-status": {
      "get": {
        "summary": "Get Onboarding Status",
        "description": "Get Stripe onboarding status for organization",
        "tags": ["Stripe Integration"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Onboarding status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/stripe": {
      "post": {
        "summary": "Stripe Webhook",
        "description": "Handle Stripe webhook events",
        "tags": ["Stripe Integration"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "object": { "type": "string" },
                  "type": { "type": "string" },
                  "data": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and status endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and session management"
    },
    {
      "name": "Practice Management",
      "description": "Practice/organization management operations"
    },
    {
      "name": "Practice Details",
      "description": "Practice business details and information"
    },
    {
      "name": "Settings",
      "description": "User and organization settings management"
    },
    {
      "name": "Stripe Integration",
      "description": "Stripe payment processing and onboarding"
    }
  ]
}


